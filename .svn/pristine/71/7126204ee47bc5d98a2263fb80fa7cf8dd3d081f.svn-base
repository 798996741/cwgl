// js-sdk有效性验证
const url = 'http://39.106.15.227:3000'
$.ajax({
  type: 'GET',
  url: `${url}/ticket`,
  dataType: 'json',
  contentType: 'application/json',
  success: function(res) {
    console.log(res)
    wx.config({
      beta: true, // 必须这么写，否则wx.invoke调用形式的jsapi会有问题
      debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
      appId: res.corpid, // 必填，企业微信的corpID
      timestamp: res.timestamp, // 必填，生成签名的时间戳
      nonceStr: res.noncestr, // 必填，生成签名的随机串
      signature: res.signature, // 必填，签名，见 附录-JS-SDK使用权限签名算法
      jsApiList: ['chooseImage'] // 必填，需要使用的JS接口列表，凡是要调用的接口都需要传进来
    })
    wx.ready(function() {
      wx.agentConfig({
        corpid: res.corpid, // 必填，企业微信的corpid，必须与当前登录的企业一致
        agentid: res.agentid, // 必填，企业微信的应用id
        timestamp: res.timestamp, // 必填，生成签名的时间戳
        nonceStr: res.noncestr, // 必填，生成签名的随机串
        signature: res.appsignature, // 必填，签名，见附录1
        jsApiList: ['thirdPartyOpenPage', 'selectExternalContact'], //必填
        success: function(res) {
          // 回调
          // alert(JSON.stringify(res))
          //调用审批流程引擎JS-API
        },
        fail: function(res) {
          if (res.errMsg.indexOf('function not exist') > -1) {
            alert('版本过低请升级')
          }
        }
      })
      // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
    })
  },
  error: function(xhr, type) {
    console.log(type)
  }
})

wx.ready(function() {
  wx.chooseImage()
  console.log('ok')
  // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
})
wx.error(function(res) {
  console.log(res)
  // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
})
